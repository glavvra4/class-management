services:
    nginx_class_management:
        container_name: nginx_class_management
        image: nginx:1.17-alpine
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - ./.docker/nginx/local.conf:/etc/nginx/conf.d/default.conf
            - ./.docker/nginx/.htpasswd:/etc/nginx/.htpasswd
            - ./:/var/www/app
        depends_on:
            - app_class_management
        networks:
            - backend

    app_class_management:
        container_name: app_class_management
        restart: unless-stopped
        build:
            context: .
            dockerfile: .docker/app/Dockerfile
            args:
                UID: ${UID}
                GID: ${GID}
        command: ['php-fpm', '--nodaemonize']
        depends_on:
            - postgres_class_management
        working_dir: /var/www/app
        extra_hosts:
            - host.docker.internal:host-gateway
        volumes:
            - ./:/var/www/app
        environment:
            UID: ${UID:-1000}
            GID: ${GID:-1001}
            CORS_ALLOW_ORIGIN: '*'
        networks:
            - backend

    postgres_class_management:
        container_name: postgres_class_management
        restart: unless-stopped
        image: postgres:15.1-alpine
        volumes:
            - ./.docker/postgres/data:/var/lib/postgresql/data
            - ./.docker/postgres/tmp:/postgresData
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - "5432:5432"
        networks:
            - backend

    redis_class_management:
        container_name: redis_class_management
        image: redis:alpine
        restart: unless-stopped
        environment:
            REDIS_PORT: ${REDIS_PORT}
            REDIS_DATABASES: ${REDIS_DATABASES}
            REDIS_PASSWORD: ${REDIS_PASSWORD}
        volumes:
            - ./.docker/redis/data:/data
            - ./.docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
        networks:
            - backend

networks:
    backend:
